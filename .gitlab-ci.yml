# This file is a template, and might need editing before it works on your project.
# Select image from https://hub.docker.com/_/php/
image: 2up/php71-fpm:1.0.3

# Select what we should cache between builds
cache:
  paths:
  - vendor/

before_script:
#- apt-get update -yqq
#- apt-get install -yqq git libmcrypt-dev libpq-dev libcurl4-gnutls-dev libicu-dev libvpx-dev libjpeg-dev
#- apt-get install -yqq libpng-dev libxpm-dev zlib1g-dev libfreetype6-dev libxml2-dev libexpat1-dev libbz2-dev
#- apt-get install -yqq libgmp3-dev libldap2-dev unixodbc-dev libsqlite3-dev libaspell-dev libsnmp-dev libpcre3-dev libtidy-dev
# Install PHP extensions
#- docker-php-ext-install mbstring curl json intl gd xml zip bz2 opcache
## Install & enable Xdebug for code coverage reports
#- pecl install xdebug
#- docker-php-ext-enable xdebug
## Install and run Composer
#- cd src
#- curl -sS https://getcomposer.org/installer | php
#- php composer.phar install
- apt-get install unzip
- composer self-update
- composer update



# Bring in any services we need http://docs.gitlab.com/ee/ci/docker/using_docker_images.html#what-is-a-service
# See http://docs.gitlab.com/ce/ci/services/README.html for examples.
services:
#  - mysql:5.7

# Set any variables we need
variables:
  # Configure mysql environment variables (https://hub.docker.com/r/_/mysql/)
#  MYSQL_DATABASE: mysql_database
#  MYSQL_ROOT_PASSWORD: mysql_strong_password

# Define pipeline stages
stages:
  - syntax
  - mess
  - test

phpcs:
  stage: syntax
  script:
    - ./vendor/bin/phpcs --error-severity=1 --warning-severity=8 --extensions=php
  only:
    refs:
      - master

phpmd:
  stage: mess
  script:
    - ./vendor/phpmd/phpmd/src/bin/phpmd src/ text _phpmd/rules.xml
  only:
    refs:
      - master
  allow_failure: true

php-7.1:
  stage: test
  script:
    - vendor/bin/phpunit --configuration phpunit.xml --colors=never --coverage-text
  only:
    refs:
      - master

# Run our tests
# If Xdebug was installed you can generate a coverage report and see code coverage metrics.
#test:
#  script:
#  - vendor/bin/phpunit --configuration phpunit.xml --colors=never --coverage-text
